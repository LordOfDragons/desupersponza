/**
 * MIT License
 * 
 * Copyright (c) 2022 DragonDreams GmbH
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

pin Dragengine.Gui
pin Dragengine.Scenery

/**
 * Super sponza lamp class. Contains various behaviors used across elements.
 */
public class SSLampClass extends SSElementClass
	public var ECBehaviorDynamicSkin dynamicSkin
	public var ECBehaviorLight light
	public var ECBehaviorRenderableLight renderableLight
	
	
	/** Create element class. */
	public func new() this("SSLamp")
	end
	
	public func new(String classname) super(classname)
		dynamicSkin = ECBehaviorDynamicSkin.new(this, getComponent())
		light = ECBehaviorLight.new(this, getCollider(), GameApp.getApp().getTriggerTable())
		renderableLight = ECBehaviorRenderableLight.new(this, dynamicSkin, light)
	end
	
	
	/** Duplicate class for XML subclassing use. */
	public func ElementClass duplicateNamed(String classname)
		return SSLampClass.new(classname)
	end
end
